export const funils = [
  //CORES PERMITIDAS
  // #98cbff, #87f2c0, #fff000, #ff8f92, #ffce5a, #e6e8ea
  {
    name: "FUNIL - Interno",
    sort: 1,
    is_main: true,
    is_unsorted_on: true,
    etapa_sucesso: "sucesso",
    etapa_insucesso: "Insucesso",
    status: [
      {
        name: "Colaborador",
        sort: 20,
        color: "#fffeb2",
      },
      {
        name: "Parceiros",
        sort: 30,
        color: "#fffd7f",
      },
      {
        name: "Outros não lead",
        sort: 40,
        color: "#fff000",
      },
    ],
  },
  {
    name: "FUNIL - IA EVO RESULT",
    sort: 2,
    is_main: false,
    is_unsorted_on: true,
    etapa_sucesso: "Tratado pela IA",
    etapa_insucesso: "Insucesso",
    status: [
      {
        name: "1º Tentativa",
        sort: 20,
        color: "#fffeb2",
      },
      {
        name: "2º Tentativa",
        sort: 30,
        color: "#fffd7f",
      },
      {
        name: "3º Tentativa",
        sort: 40,
        color: "#fff000",
      },
      {
        name: "4º Tentativa",
        sort: 50,
        color: "#ffeab2",
      },
      {
        name: "5º Tentativa (Despedida)",
        sort: 60,
        color: "#ffdc7f",
      },
    ],
  },
  {
    name: "FUNIL - Pré-vendas",
    sort: 3,
    is_main: false,
    is_unsorted_on: true,
    etapa_sucesso: "Encaminhar para vendedor",
    etapa_insucesso: "Venda perdida",
    status: [
      { name: "Leads de entrada (Formulário)", sort: 20, color: "#e6e8ea" },
      { name: "1ª Tentativa", sort: 30, color: "#98cbff" },
      { name: "2ª Tentativa", sort: 40, color: "#98cbff" },
      { name: "3ª Tentativa", sort: 50, color: "#98cbff" },
      { name: "em atendimento", sort: 60, color: "#fff000" },
      { name: "1ª Cadência (MSG)", sort: 70, color: "#98cbff" },
      { name: "2ª Cadência (MSG e ligação)", sort: 80, color: "#98cbff" },
      { name: "3ª CADÊNCIA (MSG E LIGAÇÃO)", sort: 90, color: "#98cbff" },
      { name: "4ª Cadência (MSG) - Despedida", sort: 100, color: "#98cbff" },
      { name: "Interesse Futuro", sort: 110, color: "#98cbff" },
      { name: "Qualificação concluída", sort: 120, color: "#ffce5a" },
    ],
  },
  {
    name: "FUNIL - Vendas",
    sort: 4,
    is_main: false,
    is_unsorted_on: true,
    etapa_sucesso: "Venda",
    etapa_insucesso: "Insucesso",
    status: [
      { name: "Aguardando contato", sort: 20, color: "#98cbff" },
      { name: "Levantando necessidades", sort: 30, color: "#87f2c0" },
      { name: "SImulação - feita", sort: 40, color: "#ffce5a" },
      { name: "Negociando", sort: 50, color: "#fff000" },
      { name: "Interesse futuro", sort: 60, color: "#ff8f92" },
      { name: "Agendamento", sort: 70, color: "#ffce5a" },
      { name: "Visita realizada", sort: 80, color: "#87f2c0" },
      { name: "Qualificado para venda", sort: 90, color: "#fff000" },
    ],
  },
];

export const CustomFileds = async (
  idsGrupos,
  encontrarIdsPorNomes // Este array deve ser usado dentro de um método `async` para que o `await` funcione.
) => [
  {
    name: "✚ PRINCIPAL ████████████████████",
    type: "text",
    sort: 1,
    is_api_only: true,
    required_statuses: [],
  },
  {
    name: "SDR",
    type: "select",
    sort: 2,
    is_api_only: false,
    enums: [{ value: "SDR1" }, { value: "SDR2" }],
    required_statuses: [],
  },
  {
    name: "Temperatura",
    type: "select",
    sort: 3,
    is_api_only: false,
    enums: [{ value: "Quente" }, { value: "Morno" }, { value: "Frio" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Cemitério (DESATIVADO)", "FUNIL - Vendas", "Lista de espera"],
      ["Primeiro contato", "Aguardando contato", "Por veículo"]
    ),
  },
  {
    name: "Unidade",
    type: "select",
    sort: 4,
    is_api_only: false,
    enums: [{ value: "Unidade 1" }, { value: "Unidade 2" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas", "FUNIL - Pré-vendas"],
      ["Aguardando contato", "Qualificação concluída"]
    ),
  },
  {
    name: "Cidade",
    type: "text",
    sort: 5,
    is_api_only: false,
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Qualificação concluída"]
    ),
  },
  {
    name: "✚ MARKETING ████████████████████",
    type: "text",
    sort: 508,
    is_api_only: true,
    group_id: idsGrupos["Marketing"],
    required_statuses: [],
  },
  {
    name: "Midia",
    type: "select",
    sort: 509,
    is_api_only: false,
    group_id: idsGrupos["Marketing"],
    enums: [
      { value: "Facebook" },
      { value: "Facebook ADS" },
      { value: "Instagram" },
      { value: "Instagram ADS" },
      { value: "Portais" },
      { value: "Direto (sem mídia)" },
      { value: "Outdoor/Telão/Muro" },
      { value: "Indicação" },
      { value: "Google" },
      { value: "Google ADS" },
      { value: "Rádio" },
      { value: "Panfleto" },
      { value: "Carro de som" },
      { value: "Diretoria" },
      { value: "Instagram Shopping" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      [
        "FUNIL - Vendas",
        "Lista de espera",
        "FUNIL - Marketing",
        "FUNIL - Pré-vendas",
      ],
      [
        "Aguardando contato",
        "Por veículo",
        "Contato inicial",
        "Leads de entrada (Formulário)",
      ]
    ),
  },
  {
    name: "Origem",
    type: "select",
    sort: 510,
    is_api_only: false,
    group_id: idsGrupos["Marketing"],
    enums: [
      { value: "WhatsApp" },
      { value: "Fluxo de loja" },
      { value: "Telefone" },
      { value: "Instagram - Direct" },
      { value: "Facebook - Messenger" },
      { value: "Portal - Webmotors" },
      { value: "Portal - iCarros" },
      { value: "Portal - OLX" },
      { value: "Portal - Mercado Livre" },
      { value: "Portal - UsadosBR" },
      { value: "Portal - Mobiauto" },
      { value: "Portal - Meu carro novo" },
      { value: "Prospecção Ativa" },
      { value: "Carteira/Recompra" },
      { value: "Base de dados Terceira" },
      { value: "Parente/Amigo" },
      { value: "Website loja" },
      { value: "Formulário Facebook/Instagram" },
      { value: "Página de Captura" },
      { value: "Landing Page" },
      { value: "Parceiro/Corretor" },
      { value: "Marketplace" },
      { value: "Feirão/Stand/Exposição" },
      { value: "Portal - Chaves na mão" },
      { value: "Portal - NaPista" },
      { value: "Diretoria" },
      { value: "Comentário Instagram" },
      { value: "Comentário Facebook" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      [
        "FUNIL - Vendas",
        "Lista de espera",
        "FUNIL - Marketing",
        "FUNIL - Pré-vendas",
      ],
      [
        "Aguardando contato",
        "Por veículo",
        "Contato inicial",
        "Leads de entrada (Formulário)",
      ]
    ),
  },
  {
    name: "Prospecção Ativa",
    type: "select",
    sort: 511,
    is_api_only: false,
    group_id: idsGrupos["Marketing"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Qualificação concluída"]
    ),
  },
  {
    name: "✚ SDR ████████████████████",
    type: "text",
    sort: 513,
    is_api_only: true,
    group_id: idsGrupos["SDR"],
    required_statuses: [],
  },
  {
    name: "Conseguiu atendimento com o Lead?",
    type: "select",
    sort: 514,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["em atendimento"]
    ),
  },
  {
    name: "Faixa de preço",
    type: "select",
    sort: 515,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Até 20 mil" },
      { value: "Entre 20mil e 30mil" },
      { value: "Entre 30mil e 40mil" },
      { value: "Entre 40mil e 60mil" },
      { value: "Entre 60mil e 70mil" },
      { value: "Entre 80mil e 100mil" },
      { value: "Entre 100mil e 120mil" },
      { value: "Entre 120mil e 150mil" },
      { value: "Entre 150mil e 180mil" },
      { value: "Entre 180 e 200mil" },
      { value: "Acima de 200mil" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Forma de pagamento (SDR)",
    type: "select",
    sort: 516,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Financiamento" },
      { value: "Á vista" },
      { value: "Consórcio" },
      { value: "Troca com troco" },
      { value: "Troca" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Parcela ideal",
    type: "select",
    sort: 517,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Compra à vista" },
      { value: "Até 500reais" },
      { value: "Entre 500 e 700reais" },
      { value: "Entre 700 e 900reais" },
      { value: "Entre 900 e 1200reais" },
      { value: "Entre 1200 e 1500reais" },
      { value: "Entre 1500 e 2000reais" },
      { value: "Entre 2000 e 2500reais" },
      { value: "Acima de 2500reais" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Valor disponível para entrada?",
    type: "select",
    sort: 518,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Compra à vista" },
      { value: "Apenas o usado" },
      { value: "Até 10mil" },
      { value: "Mais de 10mil e menos de 15mil" },
      { value: "Mais de 15mil e menos de 20mil" },
      { value: "Mais de 20mil e menos de 30mil" },
      { value: "Mais de 30mil e menos de 40mil" },
      { value: "Mais de 40mil" },
      { value: "Zero de entrada" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Usado na entrada?",
    type: "select",
    sort: 519,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Pretensão de compra",
    type: "select",
    sort: 520,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Em até 5 dias" },
      { value: "Em até 15 dias" },
      { value: "Em até 30 dias" },
      { value: "Em até 2 meses" },
      { value: "Em Até 3 meses" },
      { value: "Não decidido" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Tomador da decisão",
    type: "select",
    sort: 521,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Próprio lead" },
      { value: "Mãe" },
      { value: "Pai" },
      { value: "Conjugue" },
      { value: "Filho(a)" },
      { value: "Outro" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Interesse Futuro"]
    ),
  },
  {
    name: "Dor (Descreva a dor do cliente)",
    type: "textarea",
    sort: 522,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas"],
      ["Qualificação concluída"]
    ),
  },
  {
    name: "*ICP*",
    type: "text",
    sort: 523,
    is_api_only: true,
    group_id: idsGrupos["SDR"],
    required_statuses: [],
  },
  {
    name: "Cliente sabe o que quer",
    type: "select",
    sort: 524,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas", "FUNIL - Pré-vendas"],
      ["Negociando", "Qualificação concluída"]
    ),
  },
  {
    name: "Entrada/carro pra dar de entrada",
    type: "select",
    sort: 525,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Até R$10.000" },
      { value: "Entre R$10.000 e R$20.000" },
      { value: "Entre R$20.000 e R$30.000" },
      { value: "Mais de R$30.000" },
      { value: "Apenas meu carro usado" },
      { value: "Não tenho entrada" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas", "FUNIL - Pré-vendas"],
      ["Negociando", "Qualificação concluída"]
    ),
  },
  {
    name: "Em quanto tempo deseja comprar seu veículo?",
    type: "select",
    sort: 526,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [
      { value: "Hoje" },
      { value: "Essa semana" },
      { value: "Em quinze dias" },
      { value: "Em um mês" },
      { value: "Só pesquisando" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas", "FUNIL - Pré-vendas"],
      ["Negociando", "Qualificação concluída"]
    ),
  },
  {
    name: "Tem carro no estoque ou semelhante?",
    type: "select",
    sort: 527,
    is_api_only: false,
    group_id: idsGrupos["SDR"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas", "FUNIL - Pré-vendas"],
      ["Negociando", "Qualificação concluída"]
    ),
  },
  {
    name: "✚ VEÍCULO ████████████████████",
    type: "text",
    sort: 529,
    is_api_only: true,
    group_id: idsGrupos["Veículo"],
    required_statuses: [],
  },
  {
    name: "*Informações principais*",
    type: "text",
    sort: 530,
    is_api_only: true,
    group_id: idsGrupos["Veículo"],
    required_statuses: [],
  },
  {
    name: "Tipo (VN)",
    type: "select",
    sort: 531,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [{ value: "Carro" }, { value: "Moto" }, { value: "Caminhão" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Pré-vendas", "FUNIL - Vendas"],
      ["Encaminhar para vendedor", "Negociando"]
    ),
  },
  {
    name: "Placa ou Chassi (VN)",
    type: "text",
    sort: 532,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Categoria (VN)",
    type: "select",
    sort: 533,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [{ value: "Novo" }, { value: "Seminovo" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "Carroceria / Estilo (VN)",
    type: "select",
    sort: 534,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "Conversível/Cupê" },
      { value: "Hatch" },
      { value: "Minivan" },
      { value: "Picape" },
      { value: "Sedan" },
      { value: "SUV" },
      { value: "Van" },
      { value: "Perua" },
      { value: "Moto" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "*Veículo*",
    type: "text",
    sort: 535,
    is_api_only: true,
    group_id: idsGrupos["Veículo"],
    required_statuses: [],
  },
  {
    name: "Marca (VN)",
    type: "select",
    sort: 536,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "Audi" },
      { value: "BMW" },
      { value: "BYD" },
      { value: "CAOA Chery" },
      { value: "Chevrolet" },
      { value: "Citroën" },
      { value: "Fiat" },
      { value: "Ford" },
      { value: "Honda" },
      { value: "Hyundai" },
      { value: "Iveco" },
      { value: "JAC" },
      { value: "Jaguar" },
      { value: "Jeep" },
      { value: "Kia" },
      { value: "Land Rover" },
      { value: "Lexus" },
      { value: "Mercedes-Benz" },
      { value: "Mini" },
      { value: "Mitsubishi" },
      { value: "Nissan" },
      { value: "Peugeot" },
      { value: "Renault" },
      { value: "Suzuki" },
      { value: "Toyota" },
      { value: "Volkswagen" },
      { value: "Volvo" },
      { value: "Troller" },
      { value: "RAM" },
      { value: "Moto" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "Modelo (VN)",
    type: "text",
    sort: 537,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "Versão (VN)",
    type: "text",
    sort: 538,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Motorização (VN)",
    type: "select",
    sort: 539,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "1.0" },
      { value: "1.2" },
      { value: "1.3" },
      { value: "1.4" },
      { value: "1.5" },
      { value: "1.6" },
      { value: "1.7" },
      { value: "1.8" },
      { value: "1.9" },
      { value: "2.0" },
      { value: "1.0 Turbo" },
      { value: "3.0" },
      { value: "4.0" },
      { value: "2.5" },
      { value: "2.8" },
      { value: "3.2" },
      { value: "Moto" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "Ano (VN)",
    type: "select",
    sort: 540,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "2010/2010" },
      { value: "2010/2011" },
      { value: "2011/2011" },
      { value: "2011/2012" },
      { value: "2012/2012" },
      { value: "2012/2013" },
      { value: "2013/2013" },
      { value: "2013/2014" },
      { value: "2014/2014" },
      { value: "2014/2015" },
      { value: "2015/2015" },
      { value: "2015/2016" },
      { value: "2016/2016" },
      { value: "2016/2017" },
      { value: "2017/2017" },
      { value: "2017/2018" },
      { value: "2018/2018" },
      { value: "2018/2019" },
      { value: "2019/2019" },
      { value: "2019/2020" },
      { value: "2020/2020" },
      { value: "2020/2021" },
      { value: "2021/2021" },
      { value: "2021/2022" },
      { value: "2022/2022" },
      { value: "2022/2023" },
      { value: "2023/2023" },
      { value: "2023/2024" },
      { value: "2024/2024" },
      { value: "2024/2025" },
      { value: "2025/2025" },
      { value: "2025/2026" },
      { value: "2026/2026" },
      { value: "1995/1995" },
      { value: "1999/1999" },
      { value: "1999/2000" },
      { value: "2000/2000" },
      { value: "2001/2001" },
      { value: "2009/2010" },
      { value: "2004/2004" },
      { value: "2006/2007" },
      { value: "2002/2003" },
      { value: "2009/2009" },
      { value: "2005/2005" },
      { value: "2008/2009" },
      { value: "2008/2008" },
      { value: "2007/2008" },
      { value: "2003/2003" },
      { value: "2004/2005" },
      { value: "2002/2002" },
      { value: "2006/2006" },
      { value: "2007/2007" },
      { value: "2005/2006" },
      { value: "2003/2004" },
      { value: "2000/2001" },
      { value: "2001/2002" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "*Caracteristicas*",
    type: "text",
    sort: 541,
    is_api_only: true,
    group_id: idsGrupos["Veículo"],
    required_statuses: [],
  },
  {
    name: "Cor (VN)",
    type: "select",
    sort: 542,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "Amarelo" },
      { value: "Bege" },
      { value: "Branco" },
      { value: "Prata" },
      { value: "Preto" },
      { value: "Verde" },
      { value: "Vermelho" },
      { value: "Azul" },
      { value: "Cinza" },
      { value: "Dourado" },
      { value: "Marrom" },
      { value: "Vinho" },
      { value: "Roxo" },
      { value: "Laranja" },
      { value: "Várias" },
      { value: "Não informada" },
      { value: "Rosa" },
      { value: "Bronze" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Câmbio (VN)",
    type: "select",
    sort: 543,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "Manual" },
      { value: "Automático" },
      { value: "Automatizado" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Negociando"]
    ),
  },
  {
    name: "Combustível (VN)",
    type: "select",
    sort: 544,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [
      { value: "Gasolina" },
      { value: "Álcool" },
      { value: "Diesel" },
      { value: "Elétrico" },
      { value: "Flex" },
      { value: "GNV" },
      { value: "Outros" },
      { value: "Tetrafuel" },
      { value: "Gasolina e Elétrico" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "*Itens extras (VN)*",
    type: "text",
    sort: 545,
    is_api_only: true,
    group_id: idsGrupos["Veículo"],
    required_statuses: [],
  },
  {
    name: "Blindado (VN)",
    type: "select",
    sort: 546,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: []
  },
  {
    name: "Observação sobre o veículo novo",
    type: "textarea",
    sort: 547,
    is_api_only: false,
    group_id: idsGrupos["Veículo"],
    required_statuses: [],
  },
  {
    name: "✚ VISITA LOJA ████████████████████",
    type: "text",
    sort: 549,
    is_api_only: true,
    group_id: idsGrupos["Visita loja"],
    required_statuses: [],
  },
  {
    name: "Visitou a loja? (sim/não)",
    type: "select",
    sort: 550,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    enums: [{ value: "Sim" }, { value: "Não" }, { value: "Não se aplica" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Visita realizada"]
    ),
  },
  {
    name: "Data e hora da visita",
    type: "date_time",
    sort: 551,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Visita realizada"]
    ),
  },
  {
    name: "Vídeo chamada realizada? (sim/não)",
    type: "select",
    sort: 552,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    enums: [{ value: "Sim" }, { value: "Não" }, { value: "Não se aplica" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Visita realizada"]
    ),
  },
  {
    name: "Data e hora da vídeo chamada",
    type: "date_time",
    sort: 553,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    required_statuses: [],
  },
  {
    name: "*Retorno 1*",
    type: "text",
    sort: 554,
    is_api_only: true,
    group_id: idsGrupos["Visita loja"],
    required_statuses: [],
  },
  {
    name: "Retorno 1 (sim/não)",
    type: "select",
    sort: 555,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: [],
  },
  {
    name: "Data e hora retorno 1",
    type: "date_time",
    sort: 556,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    required_statuses: [],
  },
  {
    name: "*Retorno 2*",
    type: "text",
    sort: 557,
    is_api_only: true,
    group_id: idsGrupos["Visita loja"],
    required_statuses: [],
  },
  {
    name: "Retorno 2 (sim/não)",
    type: "select",
    sort: 558,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: [],
  },
  {
    name: "Data e hora retorno 2",
    type: "date_time",
    sort: 559,
    is_api_only: false,
    group_id: idsGrupos["Visita loja"],
    required_statuses: [],
  },
  {
    name: "✚ TESTE-DRIVE ████████████████████",
    type: "text",
    sort: 561,
    is_api_only: true,
    group_id: idsGrupos["Test-drive"],
    required_statuses: [],
  },
  {
    name: "Fez Test-drive (sim/não)",
    type: "select",
    sort: 562,
    is_api_only: false,
    group_id: idsGrupos["Test-drive"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Visita realizada"]
    ),
  },
  {
    name: "Data e hora do test-drive",
    type: "date_time",
    sort: 563,
    is_api_only: false,
    group_id: idsGrupos["Test-drive"],
    required_statuses: [],
  },
  {
    name: "✚ USADO ████████████████████",
    type: "text",
    sort: 565,
    is_api_only: true,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "*Informações principais do VU*",
    type: "text",
    sort: 566,
    is_api_only: true,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Usado na troca?",
    type: "select",
    sort: 567,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: [],
  },
  {
    name: "Canal de avaliação",
    type: "select",
    sort: 568,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "Fluxo de loja" },
      { value: "Oficina" },
      { value: "On-line" },
    ],
    required_statuses: [],
  },
  {
    name: "Carroceria / Estilo (VU)",
    type: "select",
    sort: 569,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "Conversível/Cupê" },
      { value: "Hatch" },
      { value: "Minivan" },
      { value: "Picape" },
      { value: "Sedan" },
      { value: "SUV" },
      { value: "Van" },
      { value: "Perua" },
      { value: "Moto" },
    ],
    required_statuses: [],
  },
  {
    name: "*Veículo usado*",
    type: "text",
    sort: 570,
    is_api_only: true,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Marca  (VU)",
    type: "select",
    sort: 571,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "Audi" },
      { value: "BMW" },
      { value: "BYD" },
      { value: "CAOA Chery" },
      { value: "Chevrolet" },
      { value: "Citroën" },
      { value: "Fiat" },
      { value: "Ford" },
      { value: "Honda" },
      { value: "Hyundai" },
      { value: "Iveco" },
      { value: "JAC" },
      { value: "Jaguar" },
      { value: "Jeep" },
      { value: "Kia" },
      { value: "Land Rover" },
      { value: "Lexus" },
      { value: "Mercedes-Benz" },
      { value: "Mini" },
      { value: "Mitsubishi" },
      { value: "Nissan" },
      { value: "Peugeot" },
      { value: "Renault" },
      { value: "Suzuki" },
      { value: "Toyota" },
      { value: "Volkswagen" },
      { value: "Volvo" },
      { value: "Moto" },
      { value: "RAM" },
      { value: "Troller" },
    ],
    required_statuses: [],
  },
  {
    name: "Modelo (VU)",
    type: "text",
    sort: 572,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Versão (VU)",
    type: "text",
    sort: 573,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Motorização (VU)",
    type: "select",
    sort: 574,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "1" },
      { value: "1.2" },
      { value: "1.3" },
      { value: "1.4" },
      { value: "1.5" },
      { value: "1.6" },
      { value: "1.7" },
      { value: "1.8" },
      { value: "1.9" },
      { value: "2.0" },
      { value: "1.0 Turbo" },
      { value: "3.0" },
      { value: "4.0" },
      { value: "2.5" },
      { value: "Moto" },
    ],
    required_statuses: [],
  },
  {
    name: "Ano (VU)",
    type: "select",
    sort: 575,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "2010/2010" },
      { value: "2010/2011" },
      { value: "2011/2011" },
      { value: "2011/2012" },
      { value: "2012/2012" },
      { value: "2012/2013" },
      { value: "2013/2013" },
      { value: "2013/2014" },
      { value: "2014/2014" },
      { value: "2014/2015" },
      { value: "2015/2015" },
      { value: "2015/2016" },
      { value: "2016/2016" },
      { value: "2016/2017" },
      { value: "2017/2017" },
      { value: "2017/2018" },
      { value: "2018/2018" },
      { value: "2018/2019" },
      { value: "2019/2019" },
      { value: "2019/2020" },
      { value: "2020/2020" },
      { value: "2020/2021" },
      { value: "2021/2021" },
      { value: "2021/2022" },
      { value: "2022/2022" },
      { value: "2022/2023" },
      { value: "2023/2023" },
      { value: "2023/2024" },
      { value: "2024/2024" },
      { value: "2024/2025" },
      { value: "2025/2025" },
      { value: "2025/2026" },
      { value: "2026/2026" },
    ],
    required_statuses: [],
  },
  {
    name: "*Caracteristicas do VU*",
    type: "text",
    sort: 576,
    is_api_only: true,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Cor (VU)",
    type: "select",
    sort: 577,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "Amarelo" },
      { value: "Bege" },
      { value: "Branco" },
      { value: "Prata" },
      { value: "Preto" },
      { value: "Verde" },
      { value: "Vermelho" },
      { value: "Azul" },
      { value: "Cinza" },
      { value: "Dourado" },
      { value: "Marrom" },
      { value: "Vinho" },
      { value: "Roxo" },
      { value: "Laranja" },
      { value: "Várias cores" },
      { value: "Não informada" },
      { value: "Rosa" },
      { value: "Bronze" },
    ],
    required_statuses: [],
  },
  {
    name: "Câmbio (VU)",
    type: "select",
    sort: 578,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "Manual" },
      { value: "Automático" },
      { value: "Automatizado" },
    ],
    required_statuses: [],
  },
  {
    name: "Combustível (VU)",
    type: "select",
    sort: 579,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [
      { value: "Gasolina" },
      { value: "Álcool" },
      { value: "Diesel" },
      { value: "Elétrico" },
      { value: "Flex" },
      { value: "GNV" },
      { value: "Outros" },
      { value: "Tetrafuel" },
      { value: "Gasolina e Elétrico" },
    ],
    required_statuses: [],
  },
  {
    name: "Quilometragem (VU)",
    type: "numeric",
    sort: 580,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "*Itens extras (VU)*",
    type: "text",
    sort: 581,
    is_api_only: true,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Blindado (VU)",
    type: "select",
    sort: 582,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: [],
  },
  {
    name: "*Avaliação do VU (R$)*",
    type: "text",
    sort: 583,
    is_api_only: true,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Expectativa da avaliação R$",
    type: "numeric",
    sort: 584,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Valor da avaliação R$",
    type: "numeric",
    sort: 585,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "Avaliação final R$",
    type: "numeric",
    sort: 586,
    is_api_only: false,
    group_id: idsGrupos["Usado"],
    required_statuses: [],
  },
  {
    name: "✚ VENDA ████████████████████",
    type: "text",
    sort: 588,
    is_api_only: true,
    group_id: idsGrupos["Venda"],
    required_statuses: [],
  },
  {
    name: "Data da venda",
    type: "date",
    sort: 589,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Usado captado?",
    type: "select",
    sort: 590,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Aceitou proposta?",
    type: "select",
    sort: 591,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: [],
  },
  {
    name: "Valor da proposta",
    type: "numeric",
    sort: 592,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    required_statuses: [],
  },
  {
    name: "*Pagamento*",
    type: "text",
    sort: 593,
    is_api_only: true,
    group_id: idsGrupos["Venda"],
    required_statuses: [],
  },
  {
    name: "Forma de pagamento",
    type: "select",
    sort: 594,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [
      { value: "À Vista" },
      { value: "Financiamento" },
      { value: "Financiamento externo" },
      { value: "Consórcio" },
      { value: "Cartão de crédito" },
      { value: "Troca com troco" },
      { value: "Troca" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Valor de entrada R$",
    type: "numeric",
    sort: 595,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    required_statuses: [],
  },
  {
    name: "Qtd. de parcelas",
    type: "select",
    sort: 596,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [
      { value: "Compra à vista" },
      { value: "12x" },
      { value: "18x" },
      { value: "24x" },
      { value: "36x" },
      { value: "48x" },
      { value: "60x" },
      { value: "30x" },
      { value: "42x" },
      { value: "15x" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Valor das parcelas R$",
    type: "numeric",
    sort: 597,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    required_statuses: [],
  },
  {
    name: "Financeira",
    type: "select",
    sort: 598,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [
      { value: "Santander" },
      { value: "Bradesco" },
      { value: "BV" },
      { value: "PAN" },
      { value: "Safra" },
      { value: "C6" },
      { value: "Omni" },
      { value: "Sicred" },
      { value: "Itaú" },
      { value: "Branco do Brasil" },
      { value: "Caixa Econômica Federal" },
      { value: "Financiamento Próprio" },
      { value: "Compra à vista" },
      { value: "Carbank - Volks" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Retorno",
    type: "select",
    sort: 599,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [
      { value: "Compra à vista" },
      { value: "R1" },
      { value: "R2" },
      { value: "R3" },
      { value: "R4" },
      { value: "R5" },
      { value: "R6" },
    ],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "*F and I*",
    type: "text",
    sort: 600,
    is_api_only: true,
    group_id: idsGrupos["Venda"],
    required_statuses: [],
  },
  {
    name: "Garantia Estendida",
    type: "select",
    sort: 601,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Emplacamento",
    type: "select",
    sort: 602,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Película",
    type: "select",
    sort: 603,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "Seguro Auto",
    type: "select",
    sort: 604,
    is_api_only: false,
    group_id: idsGrupos["Venda"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: await encontrarIdsPorNomes(
      ["FUNIL - Vendas"],
      ["Venda"]
    ),
  },
  {
    name: "✚ API ████████████████████",
    type: "text",
    sort: 606,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "*Marketing*",
    type: "text",
    sort: 607,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Tipo Lead",
    type: "select",
    sort: 608,
    is_api_only: true,
    group_id: idsGrupos["API"],
    enums: [{ value: "Inbound" }, { value: "Outbound" }],
    required_statuses: [],
  },
  {
    name: "Lead veio de ADS",
    type: "select",
    sort: 609,
    is_api_only: true,
    group_id: idsGrupos["API"],
    enums: [{ value: "Sim" }, { value: "Não" }],
    required_statuses: [],
  },
  {
    name: "##1° Conversão",
    type: "text",
    sort: 610,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Campanha (1° Impacto)",
    type: "textarea",
    sort: 611,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Conjunto de anúncio (1° Impacto)",
    type: "textarea",
    sort: 612,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Anúncio (1° Impacto)",
    type: "textarea",
    sort: 613,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Data da primeira conversão",
    type: "date_time",
    sort: 614,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "*Comercial*",
    type: "text",
    sort: 615,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "##SDR",
    type: "text",
    sort: 616,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Encaminhado para vendedor",
    type: "checkbox",
    sort: 617,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Data encaminhado",
    type: "date_time",
    sort: 618,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "##Consultor",
    type: "text",
    sort: 619,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Consultor iniciou atendimento",
    type: "checkbox",
    sort: 620,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Consultor fechou como venda",
    type: "checkbox",
    sort: 621,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Consultor (Campo formulário)",
    type: "multiselect",
    sort: 622,
    is_api_only: true,
    group_id: idsGrupos["API"],
    enums: [{ value: "Consultor 1" }, { value: "Consultor 2" }],
    required_statuses: [],
  },
  {
    name: "##Agendamento",
    type: "text",
    sort: 623,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Agendou visita a loja (API)",
    type: "select",
    sort: 624,
    is_api_only: true,
    group_id: idsGrupos["API"],
    enums: [{ value: "Sim" }, { value: "Não" }, { value: "Não se aplica" }],
    required_statuses: [],
  },
  {
    name: "Data do ultimo agendamento a loja(API)",
    type: "date_time",
    sort: 625,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Agendou chamada de vídeo (API)",
    type: "select",
    sort: 626,
    is_api_only: true,
    group_id: idsGrupos["API"],
    enums: [{ value: "Sim" }, { value: "Não" }, { value: "Não se aplica" }],
    required_statuses: [],
  },
  {
    name: "Data do ultimo agendamento de vídeo(API)",
    type: "date_time",
    sort: 627,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "*IA EVO Result*",
    type: "text",
    sort: 628,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Atendimento via IA EVO Result",
    type: "checkbox",
    sort: 629,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Tratado pela IA EVO Result",
    type: "checkbox",
    sort: 630,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Data tratado IA EVO Result",
    type: "date_time",
    sort: 631,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
  {
    name: "Encaminhado para Pré vendas IA EVO Result",
    type: "checkbox",
    sort: 632,
    is_api_only: true,
    group_id: idsGrupos["API"],
    required_statuses: [],
  },
];
